vowels <- datamat[datamat$noise==noise,]
vowelplot(norm.bark(vowels), title=paste("F1-F2 vowel space for", speaker, "in", noise), color="vowels", labels="noise", color.choice=rainbow(length(unique(vowels[,2]))))
} else {
vowels <- datamat[datamat$noise==noise & datamat$speaker==speaker,]
vowelplot(norm.bark(vowels), title=paste("F1-F2 vowel space for speaker", speaker, "in", noise), color="vowels", labels="noise", color.choice=rainbow(length(unique(vowels[,2]))))
}
}
vowels_plotting_f1f2 <- function(datamat, noise, speaker) {
if (speaker == "all") {
vowels <- datamat[datamat$noise==noise,]
vowelplot(vowels, title=paste("F1-F2 vowel space for", speaker, "in", noise), color="vowels", labels="noise", color.choice=rainbow(length(unique(vowels[,2]))))
} else {
vowels <- datamat[datamat$noise==noise & datamat$speaker==speaker,]
vowelplot(vowels, title=paste("F1-F2 vowel space for", speaker, "in", noise), color="vowels", labels="noise", color.choice=rainbow(length(unique(vowels[,2]))))
}
}
vowels_plotting(vowels, 0, "f-1")
vowels_plotting(vowels, 78, "f-1")
vowels_plotting(vowels, 90, "f-1")
vowels_plotting(vowels, 0, "f-2")
vowels_plotting(vowels, 78, "f-2")
vowels_plotting(vowels, 90, "f-2")
vowels_plotting(vowels, 0, "m-1")
vowels_plotting(vowels, 78, "m-1")
vowels_plotting(vowels, 90, "m-1")
vowels_plotting(vowels, 0, "m-2")
vowels_plotting(vowels, 78, "m-2")
vowels_plotting(vowels, 90, "m-2")
vowels_plotting(vowels, 0, "m-3")
vowels_plotting(vowels, 78, "m-3")
vowels_plotting(vowels, 90, "m-3")
# par(mfrow=c(2,1))
# vowelplot(compute.means(vowels), shape="vowels")
# vowelplot(compute.means(norm.lobanov(vowels)), shape="vowels")
# par(mfrow=c(1,1))
# g09.means <- compute.means(vowels, speaker="f-1")
# vowelplot(g09.means, color="vowels", labels="none")
# add.spread.vowelplot(vowels, speaker="f-1", sd.mult=1, color="vowels", labels="none")
# # can add annotations to the vowel plots as any other R graph, eg:
# legend("top", legend="Can you guess which vowel is 'BOY'?", col='lightslategrey', bty="n")
vowels_plotting_f1f2(vowels, 0, "all")
vowels_plotting_f1f2(vowels, 78, "all")
vowels_plotting_f1f2(vowels, 90, "all")
# Prepare vowels data
vowels <- voice_reports_clean[, c(37, 1, 36, 31, 32, 33)]
vowels$gl.F1 <- NA
vowels$gl.F2 <- NA
vowels$gl.F3 <- NA
# Extracting a substring that contains only the syllable names.
vowels$sound.name <- sapply(strsplit(vowels[,2], split="_", fixed=TRUE), "[", 2)
# Add vowel annotation.
vowels$vowel <- ifelse(grepl("a", vowels$sound.name, ignore.case=T), "a",
ifelse(grepl("à", vowels$sound.name, ignore.case=T), "a",
ifelse(grepl("á", vowels$sound.name, ignore.case=T), "a",
ifelse(grepl("ả", vowels$sound.name, ignore.case=T), "a",
ifelse(grepl("ã", vowels$sound.name, ignore.case=T), "a",
ifelse(grepl("ạ", vowels$sound.name, ignore.case=T), "a",
ifelse(grepl("ê", vowels$sound.name, ignore.case=T), "e",
ifelse(grepl("ề", vowels$sound.name, ignore.case=T), "e",
ifelse(grepl("ế", vowels$sound.name, ignore.case=T), "e",
ifelse(grepl("ể", vowels$sound.name, ignore.case=T), "e",
ifelse(grepl("ễ", vowels$sound.name, ignore.case=T), "e",
ifelse(grepl("ệ", vowels$sound.name, ignore.case=T), "e",
ifelse(grepl("u", vowels$sound.name, ignore.case=T), "u",
ifelse(grepl("ù", vowels$sound.name, ignore.case=T), "u",
ifelse(grepl("ú", vowels$sound.name, ignore.case=T), "u",
ifelse(grepl("ủ", vowels$sound.name, ignore.case=T), "u",
ifelse(grepl("ũ", vowels$sound.name, ignore.case=T), "u",
ifelse(grepl("ụ", vowels$sound.name, ignore.case=T), "u",
ifelse(grepl("ộ", vowels$sound.name, ignore.case=T), "o","NA")))))))))))))))))))
# Convert vowel types to a factor variable
vowels$vowel <- as.factor(vowels$vowel)
vowels$noise <- as.factor(vowels$noise)
vowels <- vowels[,c("speaker", "vowel", "noise", "F1", "F2", "F3", "gl.F1", "gl.F2", "gl.F3")]
vowelsbark <- convert.bark(vowels)
# plot only sub-dataframes
vowels_plotting <- function(datamat, noise, speaker) {
if (speaker == "all") {
vowels <- datamat[datamat$noise==noise,]
vowelplot(norm.bark(vowels), title=paste("F1-F2 vowel space for", speaker, "in", noise), color="vowels", labels="noise", color.choice=rainbow(length(unique(vowels[,2]))))
} else {
vowels <- datamat[datamat$noise==noise & datamat$speaker==speaker,]
vowelplot(norm.bark(vowels), title=paste("F1-F2 vowel space for speaker", speaker, "in", noise), color="vowels", labels="noise", color.choice=rainbow(length(unique(vowels[,2]))))
}
}
vowels_plotting_f1f2 <- function(datamat, noise, speaker) {
if (speaker == "all") {
vowels <- datamat[datamat$noise==noise,]
vowelplot(convert.bark(vowels), title=paste("F1-F2 vowel space for", speaker, "in", noise), color="vowels", labels="noise", color.choice=rainbow(length(unique(vowels[,2]))))
} else {
vowels <- datamat[datamat$noise==noise & datamat$speaker==speaker,]
vowelplot(convert.bark(vowels), title=paste("F1-F2 vowel space for", speaker, "in", noise), color="vowels", labels="noise", color.choice=rainbow(length(unique(vowels[,2]))))
}
}
vowels_plotting(vowels, 0, "f-1")
vowels_plotting(vowels, 78, "f-1")
vowels_plotting(vowels, 90, "f-1")
vowels_plotting(vowels, 0, "f-2")
vowels_plotting(vowels, 78, "f-2")
vowels_plotting(vowels, 90, "f-2")
vowels_plotting(vowels, 0, "m-1")
vowels_plotting(vowels, 78, "m-1")
vowels_plotting(vowels, 90, "m-1")
vowels_plotting(vowels, 0, "m-2")
vowels_plotting(vowels, 78, "m-2")
vowels_plotting(vowels, 90, "m-2")
vowels_plotting(vowels, 0, "m-3")
vowels_plotting(vowels, 78, "m-3")
vowels_plotting(vowels, 90, "m-3")
# par(mfrow=c(2,1))
# vowelplot(compute.means(vowels), shape="vowels")
# vowelplot(compute.means(norm.lobanov(vowels)), shape="vowels")
# par(mfrow=c(1,1))
# g09.means <- compute.means(vowels, speaker="f-1")
# vowelplot(g09.means, color="vowels", labels="none")
# add.spread.vowelplot(vowels, speaker="f-1", sd.mult=1, color="vowels", labels="none")
# # can add annotations to the vowel plots as any other R graph, eg:
# legend("top", legend="Can you guess which vowel is 'BOY'?", col='lightslategrey', bty="n")
vowels_plotting_f1f2(vowels, 0, "all")
vowels_plotting_f1f2(vowels, 78, "all")
vowels_plotting_f1f2(vowels, 90, "all")
knitr::opts_chunk$set(echo = TRUE)
extracted_ids <- read.csv("/Users/gianghale/Documents/GitHub/fa22-prj-pcbarko-schen176--mettler3-yc62-gianghl2/extracted_ids.txt")
knitr::opts_chunk$set(echo = TRUE)
extracted_ids <- read.csv(file="/Users/gianghale/Documents/GitHub/fa22-prj-pcbarko-schen176--mettler3-yc62-gianghl2/extracted_ids.txt")
install.packages("spotidy")
library(spotidy)
id_vector <- readLines("/Users/gianghale/Documents/GitHub/fa22-prj-pcbarko-schen176--mettler3-yc62-gianghl2/extracted_ids.txt")
id_vector <- readLines("/Users/gianghale/Documents/GitHub/fa22-prj-pcbarko-schen176--mettler3-yc62-gianghl2/extracted_ids.txt")
setwd("~/Documents/GitHub/fa22-prj-pcbarko-schen176--mettler3-yc62-gianghl2")
id_vector <- readLines("extracted_ids.txt")
id_vector <- readLines("extracted_ids.txt")
id_vector
id_vector <- readLines("extracted_ids.txt")
get_track_audio_features("0uQcP7QVoLvaFsORsdrgNh")
install.packages("spotidy")
library(spotidy)
my_token <- get_spotify_api_token(client_id = "7c83827741ee4cbc9bd117a9cf608a39", client_secret = "9c2a651fdabd472892b873644f774b09")
install.packages("spotidy")
id_vector <- readLines("extracted_ids.txt")
get_track_audio_features("0uQcP7QVoLvaFsORsdrgNh")
id_vector <- readLines("extracted_ids.txt")
get_track_audio_features(id_vector)
id_vector <- readLines("extracted_ids.txt")
get_tracks_audio_features("0uQcP7QVoLvaFsORsdrgNh,5sNESr6pQfIhL3krM8CtZn", "raw")
id_vector <- readLines("extracted_ids.txt")
get_tracks_audio_features(id_vector)
id_vector <- readLines("extracted_ids.txt")
get_tracks_audio_features("0uQcP7QVoLvaFsORsdrgNh,5sNESr6pQfIhL3krM8CtZn")
id_vector <- readLines("extracted_ids.txt")
id_string <- paste(id_vector, collapse=",")
get_tracks_audio_features(id_string)
id_vector <- readLines("extracted_ids.txt")
apply(id_vector, MARGIN=1, FUN=get_track_audio_features())
id_vector <- readLines("extracted_ids.txt")
apply(id_vector, MARGIN=1, FUN=get_track_audio_features())
id_vector <- readLines("extracted_ids.txt")
apply(id_vector, MARGIN=1, FUN=get_track_audio_features)
id_vector <- readLines("extracted_ids.txt")
dim(id_vector)
apply(id_vector, MARGIN=1, FUN=get_track_audio_features)
id_vector <- readLines("extracted_ids.txt")
head(id_vector)
apply(id_vector, MARGIN=1, FUN=get_track_audio_features)
id_vector <- readLines("extracted_ids.txt", n=25585)
head(id_vector)
apply(id_vector, MARGIN=1, FUN=get_track_audio_features)
id_vector <- readLines("extracted_ids.txt")
dim(id_vector)
apply(id_vector, MARGIN=1, FUN=get_track_audio_features)
id_vector <- as.vector(readLines("extracted_ids.txt"))
dim(id_vector)
apply(id_vector, MARGIN=1, FUN=get_track_audio_features)
id_vector <- list(readLines("extracted_ids.txt"))
dim(id_vector)
apply(id_vector, MARGIN=1, FUN=get_track_audio_features)
id_vector <- as.vector(readLines("extracted_ids.txt"))
dim(id_vector)
apply(id_vector, MARGIN=1, FUN=get_track_audio_features)
id_vector <- as.data.frame(readLines("extracted_ids.txt"))
dim(id_vector)
apply(id_vector, MARGIN=1, FUN=get_track_audio_features)
id_vector <- as.data.frame(readLines("extracted_ids.txt"))
write.csv(apply(id_vector, MARGIN=1, FUN=get_track_audio_features), "track_features.csv")
id_vector <- list(readLines("extracted_ids.txt"))
write.csv(applyl(id_vector, FUN=get_track_audio_features), "track_features.csv")
id_vector <- list(readLines("extracted_ids.txt"))
write.csv(lapply(id_vector, FUN=get_track_audio_features), "track_features.csv")
id_vector <- list(readLines("extracted_ids.txt"))
dim(id_vector)
length(id_vector)
write.csv(lapply(id_vector, FUN=get_track_audio_features), "track_features.csv")
id_vector <- list(readLines("extracted_ids.txt"))
id_vector
dim(id_vector)
length(id_vector)
write.csv(lapply(id_vector, FUN=get_track_audio_features), "track_features.csv")
id_vector <- list(readLines("extracted_ids.txt"))
id_vector
dim(id_vector)
length(id_vector)
write.csv(lapply(id_vector, FUN=get_track_audio_features), "track_features.csv")
id_vector <- readLines("extracted_ids.txt")
l = lapply(id_vector, get_track_audio_features)
id_vector <- list(readLines("extracted_ids.txt"))
l = lapply(id_vector, get_track_audio_features)
ids <- read.table("extracted_ids.txt")
ids <- read.table("extracted_ids.txt")
ids
ids <- read.table("extracted_ids.txt")
dim(ids)
ids <- read.table("extracted_ids.txt")
lapply(ids, get_track_audio_features)
ids <- read.table("extracted_ids.txt")
sapply(ids, get_track_audio_features)
ids <- read.table("extracted_ids.txt")
dim(ids)
sapply(ids, get_track_audio_features)
ids <- read.table("extracted_ids.txt")
dim(ids)
apply(ids, MARGIN=1, get_track_audio_features)
ids <- as.data.frame(read.table("extracted_ids.txt"))
dim(ids)
apply(ids, MARGIN=1, get_track_audio_features)
ids <- as.data.frame(read.table("extracted_ids.txt"))
dim(ids)
ids <- as.data.frame(read.table("extracted_ids.txt"))
dim(ids)
head(ids)
ids <- as.data.frame(read.table("extracted_ids.txt"))
apply(ids, MARGIN=1, as.string)
ids <- as.data.frame(read.table("extracted_ids.txt"))
ids <- apply(ids, MARGIN=1, toString)
ids <- as.data.frame(read.table("extracted_ids.txt"))
ids <- apply(ids, MARGIN=1, toString)
head(ids)
ids <- as.data.frame(read.table("extracted_ids.txt"))
ids <- apply(ids, MARGIN=1, toString)
write.csv(apply(ids, MARGIN=1, get_track_audio_features), "track_features.csv")
ids <- as.data.frame(read.table("extracted_ids.txt"))
ids <- apply(ids, MARGIN=1, toString)
dim(ids)
write.csv(apply(ids, MARGIN=1, get_track_audio_features), "track_features.csv")
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1, toString)
dim(ids)
write.csv(apply(ids, MARGIN=1, get_track_audio_features), "track_features.csv")
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, toString)
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, FUN=toString)
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
dim(ids)
write.csv(apply(ids, MARGIN=1,get_track_audio_features), "track_features.csv")
ids <- read.table("extracted_ids.txt")
ids <- as.data.frame(apply(ids, MARGIN=1,FUN=toString))
dim(ids)
write.csv(apply(ids, MARGIN=1,get_track_audio_features), "track_features.csv")
ids <- read.table("extracted_ids.txt")
ids <- as.data.frame(apply(ids, MARGIN=1,FUN=toString))
track_features <- apply(ids, MARGIN=1,get_track_audio_features)
ids <- read.table("extracted_ids.txt")
ids <- (apply(ids, MARGIN=1,FUN=toString)
for (x in ids) {
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
for (x in ids) {
write.table(get_track_audio_features(x), append=TRUE, file="track_features.csv")
}
install.packages("spotidy")
library(spotidy)
my_token <- get_spotify_api_token(client_id = "7c83827741ee4cbc9bd117a9cf608a39", client_secret = "9c2a651fdabd472892b873644f774b09")
install.packages("spotidy")
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
for (x in ids) {
write.table(get_track_audio_features(x), append=TRUE, file="track_features.csv", col.names = FALSE,)
}
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
for (x in ids) {
write.table(get_track_audio_features(x), append=TRUE, file="track_features.csv", col.names = FALSE,sep = ",")
}
install.packages("spotidy")
install.packages("spotifyr")
install.packages("spotidy")
library(spotidy)
library(spotifyr)
Sys.setenv(SPOTIFY_CLIENT_ID = '7c83827741ee4cbc9bd117a9cf608a39')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '9c2a651fdabd472892b873644f774b09')
access_token <- get_spotify_access_token()
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
dim(ids)
lapply(ids, MARGIN=1, get_track_audio_features(x))
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
dim(ids)
lapply(ids, MARGIN=1, get_track_audio_features)
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
dim(ids)
lapply(ids, get_track_audio_features)
install.packages("spotifyr")
library(spotifyr)
Sys.setenv(SPOTIFY_CLIENT_ID = '7c83827741ee4cbc9bd117a9cf608a39')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '9c2a651fdabd472892b873644f774b09')
access_token <- get_spotify_access_token()
install.packages("spotifyr")
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
get_track_audio_features(ids[1]))
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
get_track_audio_features(ids[1])
install.packages("spotifyr")
library(spotifyr)
Sys.setenv(SPOTIFY_CLIENT_ID = '7c83827741ee4cbc9bd117a9cf608a39')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '9c2a651fdabd472892b873644f774b09')
access_token <- get_spotify_access_token()
knitr::opts_chunk$set(echo = TRUE)
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
get_track_audio_features(ids[1])
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
get_track_audio_features(ids[1])
install.packages("spotifyr")
library(spotifyr)
Sys.setenv(SPOTIFY_CLIENT_ID = '7c83827741ee4cbc9bd117a9cf608a39')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '9c2a651fdabd472892b873644f774b09')
access_token <- get_spotify_access_token()
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
get_track_audio_features(ids[1])
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
write.csv(lapply(ids, get_track_audio_features), file="track_features.csv", append=TRUE)
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
write.table(lapply(ids, get_track_audio_features), file="track_features.csv", append=TRUE)
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
ids
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
typeof(ids)
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
as.list(strsplit(ids, "")[[1]])
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
as.list(strsplit(ids, " ")[[1]])
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
ids_list <- as.list(strsplit(ids, " "))
dim(ids_list)
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
ids_list <- as.list(strsplit(ids, " "))
typeof(ids_list)
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
ids_list <- as.list(strsplit(ids, " "))
head(ids_list)
typeof(ids_list)
write.table(lapply(ids, get_track_audio_features), file="track_features.csv", append=TRUE)
write.table(lapply(ids_list, get_track_audio_features), file="track_features.csv", append=TRUE)
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
ids_list <- as.list(strsplit(ids, " "))
head(ids_list)
typeof(ids_list)
lapply(ids_list, function(x) write.table( data.frame(get_track_audio_features(x), 'test.csv'  , append= T, sep=',' )))
setwd("~/Documents/GitHub/fa22-prj-pcbarko-schen176--mettler3-yc62-gianghl2")
lapply(ids_list, function(x) write.table( data.frame(get_track_audio_features(x), 'test.csv', append=TRUE,col.names = FALSE, sep=',' )))
lapply(ids_list, function(x) write.table(get_track_audio_features(x), 'test.csv', append=TRUE,col.names = FALSE, sep=',' ))
knitr::opts_chunk$set(echo = TRUE)
install.packages("spotifyr")
library(spotifyr)
Sys.setenv(SPOTIFY_CLIENT_ID = '7c83827741ee4cbc9bd117a9cf608a39')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '9c2a651fdabd472892b873644f774b09')
access_token <- get_spotify_access_token()
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
ids_list <- as.list(strsplit(ids, " "))
head(ids_list)
typeof(ids_list)
lapply(ids_list, function(x) write.table(get_track_audio_features(x), 'track_features_25k.csv', append=TRUE,col.names = FALSE, sep=',' ))
install.packages("spotifyr")
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
ids_list <- as.list(strsplit(ids, " "))
get_track_audio_features(ids_list[1])
install.packages("spotifyr")
library(spotifyr)
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
ids_list <- as.list(strsplit(ids, " "))
get_track_audio_features(ids_list[1])
install.packages("spotifyr")
library(spotifyr)
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
ids_list <- as.list(strsplit(ids, " "))
get_track_audio_features(ids_list[1])
install.packages("spotifyr")
install.packages("spotifyr")
install.packages("spotifyr")
library(spotifyr)
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
ids_list <- as.list(strsplit(ids, " "))
get_track_audio_features(ids_list[1])
install.packages("spotifyr")
library(spotifyr)
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
ids_list <- as.list(strsplit(ids, " "))
get_track_audio_features(ids_list[1])
install.packages("spotifyr")
library(spotifyr)
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
ids_list <- as.list(strsplit(ids, " "))
get_track_audio_features(ids_list[1])
install.packages("spotifyr")
install.packages("spotifyr")
library(spotifyr)
install.packages("spotifyr")
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
ids_list <- as.list(strsplit(ids, " "))
get_track_audio_features(ids_list[1])
install.packages("spotifyr")
library(spotifyr)
install.packages("spotifyr")
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
ids_list <- as.list(strsplit(ids, " "))
get_track_audio_features(ids_list[1])
install.packages("spotifyr")
library(spotifyr)
# Chunk 1
install.packages("spotifyr")
library(spotifyr)
# Chunk 2
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
ids_list <- as.list(strsplit(ids, " "))
get_track_audio_features(ids_list[1])
# Chunk 1
install.packages("spotifyr",repos = "http://cran.us.r-project.org")
library(spotifyr)
# Chunk 2
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
ids_list <- as.list(strsplit(ids, " "))
get_track_audio_features(ids_list[1])
install.packages("spotifyr", repos = "http://cran.us.r-project.org")
install.packages("spotifyr",repos = "http://cran.us.r-project.org")
library(spotifyr)
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
# Chunk 1
install.packages("spotifyr",repos = "http://cran.us.r-project.org")
library(spotifyr)
# Chunk 2
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
ids_list <- as.list(strsplit(ids, " "))
get_track_audio_features(ids_list[1])
# Use a combination of alphabetic and numeric characters to query responses.
# Extracted track ids from the response json.
# Deduplicated the track ids to obtain about 25k results.
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
ids_list <- as.list(strsplit(ids, " "))
get_track_audio_features(ids_list[1])
setwd("~/Documents/GitHub/fa22-prj-pcbarko-schen176--mettler3-yc62-gianghl2")
install.packages("spotifyr",repos = "http://cran.us.r-project.org")
library(spotifyr)
setwd("~/Documents/GitHub/fa22-prj-pcbarko-schen176--mettler3-yc62-gianghl2")
install.packages("spotifyr", repos = "http://cran.us.r-project.org")
# Use a combination of alphabetic and numeric characters to query responses.
# Extracted track ids from the response json.
# Deduplicated the track ids to obtain about 25k results.
setwd("~/Documents/GitHub/fa22-prj-pcbarko-schen176--mettler3-yc62-gianghl2")
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
ids_list <- as.list(strsplit(ids, " "))
get_track_audio_features(ids_list[1])
typeof(ids_list)
# write track audio features to csv
lapply(ids_list, function(x) write.table(get_track_audio_features(x), 'track_features_25k.csv', append=TRUE,col.names = FALSE, sep=',' ))
install.packages("spotifyr")
install.packages("spotifyr")
library(spotifyr)
Sys.setenv(SPOTIFY_CLIENT_ID = '7c83827741ee4cbc9bd117a9cf608a39')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '9c2a651fdabd472892b873644f774b09')
access_token <- get_spotify_access_token()
setwd("/Users/gianghale/Documents/GitHub/fa22-prj-pcbarko-schen176--mettler3-yc62-gianghl2/Old_Data")
ids <- read.table("extracted_ids.txt")
ids <- apply(ids, MARGIN=1,FUN=toString)
ids_list <- as.list(strsplit(ids, " "))
# write track audio features to csv
lapply(ids_list, function(x) write.table(get_track_audio_features(x), 'track_features_25k.csv', append=TRUE,col.names = FALSE, sep=',' ))
